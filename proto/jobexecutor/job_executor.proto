syntax = "proto3";

package jobexecutor;

service JobExecutor {
    rpc Start(StartRequest) returns (StartResponse);
    rpc Stop(StopRequest) returns (StopResponse);
    rpc JobStatus(StatusRequest) returns (StatusResponse);
    rpc GetOutput(OutputRequest) returns (stream OutputResponse);
    rpc Remove(RemoveRequest) returns (RemoveResponse);
}

message ExecutionId {
    uint32 id = 1;
}

message StartRequest {
  string path = 1;
  repeated string args = 2;
}

message StartResponse {
    ExecutionId id = 1;
    // TODO add cgroup limits
}

message StopRequest {
    ExecutionId id = 1;
    bool remove = 2;
}

message StopResponse {
}

message StatusRequest {
    ExecutionId id = 1;
}

message StatusResponse {
    string state = 2; // "Running" or ExitStatus.to_string()
}

message OutputRequest {
    ExecutionId id = 1;
}

message OutputChunk {
    string chunk = 1;
    // TODO timestamp
}

message OutputResponse {
    OutputChunk std_out_chunk = 1;
    OutputChunk std_err_chunk = 2;
}

message RemoveRequest {
    ExecutionId id = 1;
}

message RemoveResponse {
    
}
